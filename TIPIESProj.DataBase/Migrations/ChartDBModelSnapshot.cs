// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TIPIESProj.DataBase;

namespace TIPIESProj.DataBase.Migrations
{
    [DbContext(typeof(ChartDB))]
    partial class ChartDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TIPIESProj.DataBase.Models.Buyer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Fio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Buyers");
                });

            modelBuilder.Entity("TIPIESProj.DataBase.Models.ChartOfAccounts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("AccountNumber")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SudKonto1")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChartOfAccounts");
                });

            modelBuilder.Entity("TIPIESProj.DataBase.Models.Division", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChartOfAccountsId")
                        .HasColumnType("int");

                    b.Property<int?>("DivisionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.ToTable("Divisions");
                });

            modelBuilder.Entity("TIPIESProj.DataBase.Models.OperationLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Sum")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OperationLogs");
                });

            modelBuilder.Entity("TIPIESProj.DataBase.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PlannedCostPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("TIPIESProj.DataBase.Models.TransactionLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int?>("CreditId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DebetId")
                        .HasColumnType("int");

                    b.Property<int>("OperationLogId")
                        .HasColumnType("int");

                    b.Property<string>("SubKontoK1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SudKontoD1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Sum")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TransactionLogId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreditId");

                    b.HasIndex("DebetId");

                    b.HasIndex("TransactionLogId");

                    b.ToTable("TransactionLogs");
                });

            modelBuilder.Entity("TIPIESProj.DataBase.Models.Division", b =>
                {
                    b.HasOne("TIPIESProj.DataBase.Models.ChartOfAccounts", "ChartOfAccounts")
                        .WithMany("Divisions")
                        .HasForeignKey("DivisionId");

                    b.HasOne("TIPIESProj.DataBase.Models.OperationLog", null)
                        .WithMany("Division")
                        .HasForeignKey("DivisionId");
                });

            modelBuilder.Entity("TIPIESProj.DataBase.Models.Product", b =>
                {
                    b.HasOne("TIPIESProj.DataBase.Models.OperationLog", null)
                        .WithMany("Product")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("TIPIESProj.DataBase.Models.TransactionLog", b =>
                {
                    b.HasOne("TIPIESProj.DataBase.Models.ChartOfAccounts", "Credit")
                        .WithMany("CreditTransactionLogs")
                        .HasForeignKey("CreditId");

                    b.HasOne("TIPIESProj.DataBase.Models.ChartOfAccounts", "Debet")
                        .WithMany("DebetsTransactionLogs")
                        .HasForeignKey("DebetId");

                    b.HasOne("TIPIESProj.DataBase.Models.OperationLog", "OperationLog")
                        .WithMany("TransactionLog")
                        .HasForeignKey("TransactionLogId");
                });
#pragma warning restore 612, 618
        }
    }
}
